// Code generated by github.com/marcbinz/som, DO NOT EDIT.
package where

import (
	uuid "github.com/google/uuid"
	model "github.com/marcbinz/som/example/model"
	filter "github.com/marcbinz/som/lib/filter"
)

func newSomeStruct[T any](key filter.Key) someStruct[T] {
	return someStruct[T]{
		IntPtr:    filter.NewNumericPtr[*int, T](key.Dot("int_ptr")),
		StringPtr: filter.NewStringPtr[T](key.Dot("string_ptr")),
		TimePtr:   filter.NewTimePtr[T](key.Dot("time_ptr")),
		UuidPtr:   filter.NewBasePtr[uuid.UUID, T](key.Dot("uuid_ptr")),
		key:       key,
	}
}

type someStruct[T any] struct {
	key       filter.Key
	StringPtr *filter.StringPtr[T]
	IntPtr    *filter.NumericPtr[*int, T]
	TimePtr   *filter.TimePtr[T]
	UuidPtr   *filter.BasePtr[uuid.UUID, T]
}
type someStructSlice[T any] struct {
	someStruct[T]
	*filter.Slice[model.SomeStruct, T]
}
