// Code generated by github.com/marcbinz/som, DO NOT EDIT.
package conv

import (
	"encoding/json"
	som "github.com/marcbinz/som"
	model "github.com/marcbinz/som/examples/testing/model"
	"strings"
)

type URLExample struct {
	ID           string  `json:"id,omitempty"`
	SomeURL      *string `json:"some_url"`
	SomeOtherURL string  `json:"some_other_url"`
}

func FromURLExample(data model.URLExample) URLExample {
	return URLExample{
		SomeOtherURL: data.SomeOtherURL.String(),
		SomeURL:      urlPtr(data.SomeURL),
	}
}

func ToURLExample(data URLExample) model.URLExample {
	return model.URLExample{
		Node:         som.NewNode(parseDatabaseID("url_example", data.ID)),
		SomeOtherURL: parseURL(data.SomeOtherURL),
		SomeURL:      ptrFunc(parseURL)(data.SomeURL),
	}
}

type uRLExampleLink struct {
	URLExample
	ID string
}

func (f *uRLExampleLink) MarshalJSON() ([]byte, error) {
	if f == nil {
		return nil, nil
	}
	return json.Marshal(f.ID)
}

func (f *uRLExampleLink) UnmarshalJSON(data []byte) error {
	raw := string(data)
	if strings.HasPrefix(raw, "\"") && strings.HasSuffix(raw, "\"") {
		raw = raw[1 : len(raw)-1]
		f.ID = parseDatabaseID("url_example", raw)
		return nil
	}
	type alias uRLExampleLink
	var link alias
	err := json.Unmarshal(data, &link)
	if err == nil {
		*f = uRLExampleLink(link)
	}
	return err
}

func fromURLExampleLink(link *uRLExampleLink) model.URLExample {
	if link == nil {
		return model.URLExample{}
	}
	return ToURLExample(URLExample(link.URLExample))
}

func fromURLExampleLinkPtr(link *uRLExampleLink) *model.URLExample {
	if link == nil {
		return nil
	}
	node := ToURLExample(URLExample(link.URLExample))
	return &node
}

func toURLExampleLink(node model.URLExample) *uRLExampleLink {
	if node.ID() == "" {
		return nil
	}
	link := uRLExampleLink{URLExample: FromURLExample(node), ID: buildDatabaseID("url_example", node.ID())}
	return &link
}

func toURLExampleLinkPtr(node *model.URLExample) *uRLExampleLink {
	if node == nil || node.ID() == "" {
		return nil
	}
	link := uRLExampleLink{URLExample: FromURLExample(*node), ID: buildDatabaseID("url_example", node.ID())}
	return &link
}
