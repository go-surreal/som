// Code generated by github.com/go-surreal/som, DO NOT EDIT.
package conv

import (
	sdbc "github.com/go-surreal/sdbc"
	sombase "github.com/go-surreal/som/tests/basic/gen/som/sombase"
	model "github.com/go-surreal/som/tests/basic/model"
)

type GroupMember struct {
	ID        *sombase.ID     `cbor:"id,omitempty"`
	CreatedAt *sdbc.DateTime  `cbor:"created_at,omitempty"`
	UpdatedAt *sdbc.DateTime  `cbor:"updated_at,omitempty"`
	Meta      groupMemberMeta `cbor:"meta"`
}

func FromGroupMember(data model.GroupMember) GroupMember {
	return GroupMember{Meta: fromGroupMemberMeta(data.Meta)}
}
func FromGroupMemberPtr(data *model.GroupMember) *GroupMember {
	if data == nil {
		return nil
	}
	return &GroupMember{Meta: fromGroupMemberMeta(data.Meta)}
}

func ToGroupMember(data *GroupMember) model.GroupMember {
	return model.GroupMember{
		Edge:       sombase.NewEdge(data.ID),
		Meta:       toGroupMemberMeta(data.Meta),
		Timestamps: sombase.NewTimestamps(data.CreatedAt, data.UpdatedAt),
	}
}
func ToGroupMemberPtr(data *GroupMember) *model.GroupMember {
	if data == nil {
		return nil
	}
	return &model.GroupMember{
		Edge:       sombase.NewEdge(data.ID),
		Meta:       toGroupMemberMeta(data.Meta),
		Timestamps: sombase.NewTimestamps(data.CreatedAt, data.UpdatedAt),
	}
}
